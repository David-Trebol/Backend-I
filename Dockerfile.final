# Dockerfile final optimizado para el proyecto Backend I
FROM node:18-alpine AS base

# Instalar dependencias del sistema necesarias
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    curl

# Crear directorio de trabajo
WORKDIR /app

# Crear usuario no-root para seguridad
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# ===========================================
# STAGE 1: Dependencies
# ===========================================
FROM base AS dependencies

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar dependencias de producción
RUN npm ci --only=production && \
    npm cache clean --force

# ===========================================
# STAGE 2: Build
# ===========================================
FROM base AS build

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar todas las dependencias (incluyendo devDependencies)
RUN npm ci

# Copiar código fuente
COPY . .

# Crear directorios necesarios
RUN mkdir -p logs src/data && \
    chown -R nodejs:nodejs /app

# ===========================================
# STAGE 3: Production
# ===========================================
FROM base AS production

# Variables de entorno
ENV NODE_ENV=production
ENV PORT=3000

# Copiar dependencias de producción desde stage dependencies
COPY --from=dependencies --chown=nodejs:nodejs /app/node_modules ./node_modules

# Copiar código fuente desde stage build
COPY --from=build --chown=nodejs:nodejs /app/src ./src
COPY --from=build --chown=nodejs:nodejs /app/package*.json ./

# Crear directorios necesarios
RUN mkdir -p logs src/data && \
    chown -R nodejs:nodejs /app

# Cambiar al usuario no-root
USER nodejs

# Exponer puerto
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Comando para iniciar la aplicación
CMD ["node", "src/app.js"]

# ===========================================
# STAGE 4: Development (opcional)
# ===========================================
FROM base AS development

# Variables de entorno para desarrollo
ENV NODE_ENV=development
ENV PORT=3000

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar todas las dependencias
RUN npm install

# Copiar código fuente
COPY --chown=nodejs:nodejs . .

# Crear directorios necesarios
RUN mkdir -p logs src/data && \
    chown -R nodejs:nodejs /app

# Cambiar al usuario no-root
USER nodejs

# Exponer puerto
EXPOSE 3000

# Comando para desarrollo
CMD ["npm", "run", "dev"]
