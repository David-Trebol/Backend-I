<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalle del Carrito</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Detalle del Carrito</h1>
        
        <div class="row">
            {{#each products}}
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">{{this.product.title}}</h5>
                        <p class="card-text">{{this.product.description}}</p>
                        <p class="card-text">Precio: ${{this.product.price}}</p>
                        <p class="card-text">Cantidad: {{this.quantity}}</p>
                        <div class="d-flex justify-content-between">
                            <button onclick="updateQuantity('{{this.product._id}}')" class="btn btn-warning">Actualizar Cantidad</button>
                            <button onclick="removeProduct('{{this.product._id}}')" class="btn btn-danger">Eliminar</button>
                        </div>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>

        <div class="mt-4">
            <button onclick="clearCart()" class="btn btn-danger">Vaciar Carrito</button>
            <a href="/products" class="btn btn-primary">Seguir Comprando</a>
        </div>
    </div>

    <script>
        async function updateQuantity(productId) {
            const quantity = prompt('Ingrese la nueva cantidad:');
            if (quantity) {
                try {
                    const response = await fetch(`/api/carts/current/products/${productId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ quantity: parseInt(quantity) })
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error al actualizar la cantidad');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al actualizar la cantidad');
                }
            }
        }

        async function removeProduct(productId) {
            if (confirm('¿Está seguro de eliminar este producto del carrito?')) {
                try {
                    const response = await fetch(`/api/carts/current/products/${productId}`, {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error al eliminar el producto');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al eliminar el producto');
                }
            }
        }

        async function clearCart() {
            if (confirm('¿Está seguro de vaciar el carrito?')) {
                try {
                    const response = await fetch('/api/carts/current', {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error al vaciar el carrito');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al vaciar el carrito');
                }
            }
        }
    </script>
</body>
</html> 